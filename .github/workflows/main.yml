# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: OMOS-CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        java-package: jdk

    - name: Decode API KEY
      env:
        RECORD_API_KEY: ${{secrets.RECORD_API_KEY}}
        KAKAO_REST_API_KEY: ${{secrets.KAKAO_REST_API_KEY}}
        KAKAO_NATIVE_APP_KEY: ${{secrets.KAKAO_NATIVE_APP_KEY}}
      run: |
        echo record_api_key="$RECORD_API_KEY", kakao_rest_api_key="$KAKAO_REST_API_KEY", kakao_native_app_key="$KAKAO_NATIVE_APP_KEY" > ./local.properties
        
    - name: Change gradlew permissions
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew build --warning-mode all --stacktrace
       
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
     
    - name: Build APK
      run: bash ./gradlew assembleDebug --warning-mode all --stacktrace
     
     
    - run: './gradlew assembleDebug'
    - uses: MeilCli/slack-upload-file@v1
      with:
        slack_token: ${{ secrets.SLACK_READ_WRITE_TOKEN }}
        channels: ${{ secrets.SLACK_CHANNEL_DEPLOY }}
        file_path: 'app/build/outputs/apk/debug/app-debug.apk'
        file_name: 'app-debug.apk'
        file_type: 'apk'
        initial_comment: 'OMOS 최신 빌드 앱 배포(Android) - ${{github.event.head_commit.message}}'

       
    - name: apk upload
      uses: actions/upload-artifact@v2
      with:
        name: app-debug.apk
        path: app/build/outputs/apk/debug/app-debug.apk
